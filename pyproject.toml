[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "openinferencev2"
version = "2.0.0"
description = "High-Performance Distributed LLM Inference Engine"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Nik Jois", email = "nikjois@llamasearch.ai"},
]
maintainers = [
    {name = "Nik Jois", email = "nikjois@llamasearch.ai"},
]
keywords = [
    "llm",
    "inference",
    "pytorch",
    "cuda",
    "distributed",
    "optimization",
    "machine-learning",
    "artificial-intelligence",
    "gpu",
    "performance",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
    "Typing :: Typed",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "rich>=13.0.0",
    "psutil>=5.9.0",
    "numpy>=1.24.0",
    "accelerate>=0.20.0",
    "tokenizers>=0.13.0",
    "pydantic>=2.0.0",
    "click>=8.1.0",
    "tqdm>=4.65.0",
    "pyyaml>=6.0",
    "typing-extensions>=4.5.0",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/llamasearchai/OpenInferencev2"
Documentation = "https://github.com/llamasearchai/OpenInferencev2/blob/main/README.md"
Repository = "https://github.com/llamasearchai/OpenInferencev2"
"Bug Reports" = "https://github.com/llamasearchai/OpenInferencev2/issues"
Changelog = "https://github.com/llamasearchai/OpenInferencev2/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-benchmark>=4.0.0",
    "pre-commit>=3.0.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "sphinx-autodoc-typehints>=1.24.0",
]
gpu = [
    "nvitop>=1.3.0",
    "pynvml>=11.5.0",
    "GPUtil>=1.4.0",
]
api = [
    "fastapi>=0.103.0",
    "uvicorn>=0.23.0",
    "prometheus-client>=0.17.0",
]
profiling = [
    "memory-profiler>=0.61.0",
    "line-profiler>=4.1.0",
    "py-spy>=0.3.14",
    "scalene>=1.5.0",
]
all = [
    "openinferencev2[dev,docs,gpu,api,profiling]",
]

[project.scripts]
openinferencev2 = "src.cli.main:main"
oi2 = "src.cli.main:main"

[project.entry-points."openinferencev2.plugins"]
default = "openinferencev2.plugins:default_plugin"

# Tool configurations
[tool.setuptools]
packages = ["openinferencev2", "src"]
include-package-data = true

[tool.setuptools.package-data]
openinferencev2 = ["py.typed", "*.pyi"]
src = ["**/*.yaml", "**/*.json", "**/*.cu", "**/*.h"]

[tool.setuptools.dynamic]
version = {attr = "openinferencev2.__version__"}

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["openinferencev2", "src"]
known_third_party = ["torch", "transformers", "numpy", "rich"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "transformers.*",
    "torch.*",
    "accelerate.*",
    "GPUtil.*",
    "psutil.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=openinferencev2",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests as requiring GPU",
    "benchmark: marks tests as benchmarks",
    "stress: marks tests as stress tests",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["openinferencev2", "src"]
branch = true
parallel = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/site-packages/*",
    "setup.py",
]

[tool.coverage.report]
show_missing = true
skip_covered = false
skip_empty = true
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "TYPE_CHECKING",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

# Bandit security configuration
[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]

# Flake8 configuration (in setup.cfg for compatibility)
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
select = ["E", "W", "F", "C", "N"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".tox",
    ".venv",
    "venv",
    ".mypy_cache",
    ".pytest_cache",
]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:S101",
]

# Commitizen configuration
[tool.commitizen]
name = "cz_conventional_commits"
version = "2.0.0"
tag_format = "v$version"
version_files = [
    "openinferencev2/__init__.py",
    "pyproject.toml:version",
]
bump_message = "bump: version $current_version â†’ $new_version"
update_changelog_on_bump = true
changelog_file = "CHANGELOG.md"
changelog_format = "markdown"

# Ruff configuration (alternative to flake8)
[tool.ruff]
line-length = 88
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101"]

[tool.ruff.mccabe]
max-complexity = 10

# Semantic release configuration
[tool.semantic_release]
version_variable = [
    "openinferencev2/__init__.py:__version__",
    "pyproject.toml:version"
]
branch = "main"
changelog_file = "CHANGELOG.md"
build_command = "pip install build && python -m build"
dist_path = "dist/"
upload_to_pypi = true
upload_to_release = true
remove_dist = false 